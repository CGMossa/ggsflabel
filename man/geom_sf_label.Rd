% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom.R
\docType{data}
\name{geom_sf_label}
\alias{geom_sf_label}
\alias{StatSfCoordinates}
\alias{geom_sf_text}
\alias{geom_sf_label_repel}
\alias{geom_sf_text_repel}
\title{Label and Text 'Geom's}
\format{An object of class \code{StatSfCoordinates} (inherits from \code{Stat}, \code{ggproto}, \code{gg}) of length 4.}
\usage{
StatSfCoordinates

geom_sf_label(mapping = NULL, data = NULL,
  fun.geometry = sf::st_point_on_surface, ...)

geom_sf_text(mapping = NULL, data = NULL,
  fun.geometry = sf::st_point_on_surface, ...)

geom_sf_label_repel(mapping = NULL, data = NULL,
  fun.geometry = sf::st_point_on_surface, ...)

geom_sf_text_repel(mapping = NULL, data = NULL,
  fun.geometry = sf::st_point_on_surface, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame.}, and
will be used as the layer data.}

\item{fun.geometry}{A function that takes a \code{sfc} object and returns a
\code{sfc_POINT} with the same length as the input (e.g. \link[sf]{st_point_on_surface}).}

\item{...}{Other arguments passed to the underlying function.}
}
\description{
Provides label and text \code{geom}s that automatically retrieve the sf object's coordinates.
}
\details{
These functions are thin wrappers of usual geoms like \code{geom_label()}, the only difference is that
they use \code{StatSfCoordinates} for \code{stat}. More precisely:

\itemize{
  \item \code{geom_sf_label()} is the thin wrapper of \link[ggplot2]{geom_label}.
  \item \code{geom_sf_text()} is the thin wrapper of \link[ggplot2]{geom_text}.
  \item \code{geom_sf_label_repel()} is the thin wrapper of \link[ggrepel]{geom_label_repel}.
  \item \code{geom_sf_text_repel()} is the thin wrapper of \link[ggrepel]{geom_text_repel}.
}
}
\examples{
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"), quiet = TRUE)
# st_point_on_surface may not give correct results for longitude/latitude data
nc_3857 <- sf::st_transform(nc, 3857)

# geom_label() for sf
ggplot(nc_3857[1:3, ]) +
  geom_sf(aes(fill = AREA)) +
  geom_sf_label(aes(label = NAME))

# ggrepel::geom_label_repel() for sf
ggplot(nc_3857[1:3, ]) +
  geom_sf(aes(fill = AREA)) +
  geom_sf_label_repel(
    aes(label = NAME),
    # additional parameters are passed to geom_label_repel()
    nudge_x = -5, nudge_y = -5, seed = 10
  )

# Of course, you can use StatSfCoordinates with any geoms.
ggplot(nc_3857[1:3, ]) +
  geom_sf(aes(fill = AREA)) +
  geom_point(aes(geometry = geometry,stat(X), stat(Y)),
             stat = StatSfCoordinates,
             fun.geometry = sf::st_centroid,
             colour = "white", size = 10)
}
\keyword{datasets}
